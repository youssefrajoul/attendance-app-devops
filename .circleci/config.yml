version: 2.1

jobs:
  build-and-push:
    docker:
      - image: circleci/php:8.2

    steps:
      - checkout

      # Install Docker
      - run:
          name: Install Docker
          command: |
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

      # Authenticate with Azure Container Registry
      - run:
          name: Azure Login
          command: echo "$DOCKER_PASS" | docker login --username prjg5noecontainer --password-stdin prjg5noecontainer.azurecr.io

      # Build and push Docker image
      - run:
          name: Build and Push Docker Image
          command: |
            docker build . -t prjg5noecontainer.azurecr.io/prjg5neo:latest
            docker push prjg5noecontainer.azurecr.io/prjg5neo:latest

workflows:
  version: 2
  build-and-push:
    jobs:
      - build-and-push
# version: 2.1
# orbs:
#   docker: circleci/docker@2.1.2

# on:
#   push:
#     branches:
#       - devops

# jobs:
#   build-and-test:
#     description: Setup laravel application and run tests
#     docker:
#       # Specify the version you desire here
#       - image: cimg/php:8.2-browsers

#     steps:
#       - checkout

#       - run:
#           name: "Prepare environment"
#           command: |
#             sudo apt update
#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             # "composer.lock" can be used if it is committed to the repository
#             - v1-dependencies-{{ checksum "composer.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: "Install dependencies"
#           command: composer install --prefer-dist --no-interaction

#       - save_cache:
#           key: v1-dependencies-{{ checksum "composer.json" }}
#           paths:
#             - ./vendor

#       - run:
#           name: "Create .env file and generate app key"
#           command: |
#             cp .env.example .env
#             php artisan key:generate

#   build-docker-image:
#     executor:
#       name: docker/docker
#       tag: "3.6"
#     steps:
#       - checkout
#       - docker/install-docker-tools
#       - setup_remote_docker:
#           version: 20.10.24
#           docker_layer_caching: true
#       - run:
#           name: "Build and Push Docker image"
#           command: |
#             docker build . -t prjg5noecontainer.azurecr.io/prjg5neo:latest
#             echo "$DOCKER_PASS" | docker login --username prjg5noecontainer --password-stdin prjg5noecontainer.azurecr.io
#             docker push prjg5noecontainer.azurecr.io/prjg5neo:latest

# workflows:
#   test-and-deploy:
#     jobs:
#       - build-and-test
#       - build-docker-image:
#           requires:
#             - build-and-test
